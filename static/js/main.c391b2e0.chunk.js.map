{"version":3,"sources":["components/images/polygon2.jpg","components/Header.tsx","components/About.tsx","components/Experiences.tsx","components/Skill.tsx","components/Top.tsx","components/Works.tsx","components/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","createStyles","root","width","backgroundColor","palette","background","paper","maxWidth","position","subHeader","ListItemLink","props","ListItem","button","component","ResponsiveDrawer","useState","mobileOpen","setMobileMenuIsOpen","classes","refItems","map","item","href","url","ListItemIcon","className","class","ListItemText","primary","name","target","onResize","onClick","List","aria-label","subheader","ListSubheader","Header","references","contact","fontSize","hovers","color","imgs","border","borderRadius","About","key","value","getWindowDimensions","window","innerWidth","height","innerHeight","windowDimensions","setWindowDimensions","useEffect","addEventListener","removeEventListener","useWindowDimensions","id","Grid","container","direction","justify","alignItems","spacing","xs","src","polyImg","Experiences","aboutTitle","textAlign","table_contents","role","period","Skill","Top","ref","textDecoration","opacity","cardContainer","cardDescription","noCardDescription","display","largeCard","mediumCard","smallCard","cover","Works","data","description","img","xl","Card","CardContent","Typography","variant","CardMedia","image","title","footerWrapper","paddingTop","paddingBottom","paddingRight","Footer","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,sC,kSCUrCC,G,MAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACFC,MAAO,OACPC,gBAAiBJ,EAAMK,QAAQC,WAAWC,MAC1CC,SAAU,MACVC,SAAU,SAEdC,UAAW,CACPD,SAAU,kBAKhBE,EAAe,SAACC,GAClB,OAAO,kBAACC,EAAA,EAAD,eAAUC,QAAM,EAACC,UAAU,KAAQH,KAYxCI,EAAoC,SAACJ,GAAkB,IAAD,EACdK,oBAAS,GADK,mBACjDC,EADiD,KACrCC,EADqC,KAElDC,EAAetB,IAEfuB,EAD2BT,EAAMS,SACXC,KAAI,SAACC,GAAD,OAC5B,kBAAC,EAAD,CAAcC,KAAMD,EAAKE,KACrB,kBAACC,EAAA,EAAD,KACI,uBAAGC,UAAWJ,EAAKK,SAEvB,kBAACC,EAAA,EAAD,CAAcC,QAASP,EAAKQ,WAOpC,OACI,oCACI,kBAAC,IAAD,CAAeC,OAAO,SAASC,SALlB,WACjBd,GAAoB,MAKfD,EACG,oCACI,yBAAKS,UAAU,eACX,uBACIA,UAAU,wBACVO,QAAS,kBACLf,GAAoBD,OAIhC,kBAACiB,EAAA,EAAD,CACIpB,UAAU,MACVqB,aAAW,kBACXT,UAAWP,EAAQlB,KACnBmC,UACI,kBAACC,EAAA,EAAD,CACIvB,UAAU,MACVY,UAAWP,EAAQV,WAFvB,eAQHW,IAIT,yBAAKM,UAAU,eACX,uBACIA,UAAU,uBACVO,QAAS,kBACLf,GAAoBD,SA8CjCqB,EArCU,WACrB,IAAMC,EAA2B,CAC7B,CACIT,KAAM,SACNN,IAAK,4BACLG,MAAO,sBAEX,CACIG,KAAM,UACNN,IAAK,+BACLG,MAAO,8BAEX,CACIG,KAAM,SACNN,IAAK,iCACLG,MAAO,sBAGTP,EAA0BmB,EAAWlB,KAAI,SAACC,GAAD,OAC3C,uBAAGC,KAAMD,EAAKE,KACV,uBAAGE,UAAWJ,EAAKK,YAI3B,OACI,yBAAKD,UAAU,kBACX,yBAAKA,UAAU,eACX,uBAAGH,KAAK,UAAR,SACA,uBAAGA,KAAK,eAAR,WACA,uBAAGA,KAAK,UAAR,SACA,uBAAGA,KAAK,UAAR,UAEJ,yBAAKG,UAAU,gBAAgBN,GAC/B,kBAAC,EAAD,CAAkBA,SAAUmB,M,yBCzHlC1C,EAAYC,aAAW,iBAAO,CAChC0C,QAAS,CACLC,SAAU,UAEdC,OAAQ,CACJC,MAAO,QACP,UAAW,CACPA,MAAO,4BAGfC,KAAM,CACF1C,MAAO,MACP2C,OAAQ,kBACRC,aAAc,YAgGPC,EAjES,WACpB,IAAM5B,EAAUtB,IADU,GAEF,CACpB,CAAEmD,IAAK,OAAQC,MAAO,oBAAqBzB,IAAK,IAChD,CACIwB,IAAK,aACLC,MAAO,mDACPzB,IAAK,IAET,CAAEwB,IAAK,SAAUC,MAAO,SAAUzB,IAAK,6BACvC,CACIwB,IAAK,UACLC,MAAO,WACPzB,IAAK,gCAET,CAAEwB,IAAK,UAAWC,MAAO,+BAAgCzB,IAAK,KAGtCH,KAAI,SAACC,GAAD,OAC5B,4BACI,4BAAKA,EAAK0B,KACV,4BACI,uBAAGzB,KAAMD,EAAKE,IAAKE,UAAWP,EAAQuB,QACjCpB,EAAK2B,YAlDc,WACpC,IAAMC,EAAsB,WAAO,IAAD,EACqBC,OACnD,MAAO,CACHjD,MAH0B,EACtBkD,WAGJC,OAJ0B,EACHC,cAFW,EASMtC,mBAC5CkC,KAVsC,mBASnCK,EATmC,KASjBC,EATiB,KAmB1C,OAPAC,qBAAU,WACN,IAAMzB,EAAW,WACbwB,EAAoBN,MAGxB,OADAC,OAAOO,iBAAiB,SAAU1B,GAC3B,kBAAMmB,OAAOQ,oBAAoB,SAAU3B,MACnD,IACIuB,EAqCmBK,IAAlB1D,EA7BkB,EA6BlBA,MA7BkB,EA6BXmD,OACf,OACI,yBAAKQ,GAAG,QAAQnC,UAAU,mBACtB,wBAAIA,UAAU,SAAd,SACA,kBAACoC,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXC,QAAS,GAERjE,EArFS,IAsFN,kBAAC4D,EAAA,EAAD,CAAMM,GAAI,EAAG9C,MAAI,GACb,yBAAK+C,IAAKC,IAAS5C,UAAWP,EAAQyB,QAG1C,qCAEJ,kBAACkB,EAAA,EAAD,CAAMM,GAAIlE,EAAQ,IAAM,EAAI,EAAGoB,MAAI,GAC/B,yeAIA,qSAGA,uBAAGI,UAAWP,EAAQqB,SAAtB,wDC1DL+B,GA7CGzE,aAAW,SAACC,GAAD,MAAY,CACrCyE,WAAY,CACRC,UAAW,cASW,WAC1B,IAiBMC,EAjBmB,CACrB,CACI1B,IAAK,mDACL2B,KAAM,oBACNC,OAAQ,6BAEZ,CACI5B,IAAK,WACL2B,KAAM,sBACNC,OAAQ,0CAEZ,CACI5B,IAAK,8BACL2B,KAAM,iBACNC,OAAQ,6BAGYvD,KAAI,SAACC,GAAD,OAC5B,4BACI,4BAAKA,EAAK0B,KACV,4BAAK1B,EAAKqD,MACV,4BAAKrD,EAAKsD,YAIlB,OACI,yBAAKf,GAAG,aAAanC,UAAU,mBAC3B,wBAAIA,UAAU,SAAd,eACA,2BAAOA,UAAU,iBAAiBgD,MCV/BG,G,MA3BS,WACpB,IAYMH,EAZkB,CACpB,CAAE1B,IAAK,kBACP,CAAEA,IAAK,eACP,CAAEA,IAAK,OACP,CAAEA,IAAK,UACP,CAAEA,IAAK,QACP,CAAEA,IAAK,aACP,CAAEA,IAAK,YACP,CAAEA,IAAK,OACP,CAAEA,IAAK,cAGiB3B,KAAI,SAACC,GAAD,OAC5B,4BACI,4BAAKA,EAAK0B,SAIlB,OACI,yBAAKa,GAAG,QAAQnC,UAAU,mBACtB,wBAAIA,UAAU,SAAd,SACA,2BAAOA,UAAU,iBAAiBgD,MChB/BI,GAVGhF,aAAW,SAACC,GAAD,MAAY,CACrCyE,WAAY,CACRC,UAAW,cAIG,WAClB,OAAO,uC,gCCWL5E,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCgF,IAAK,CACDC,eAAgB,OAChB,UAAW,CACPC,QAAS,QAGjBC,cAAe,CACXT,UAAW,UAEfU,gBAAiB,GACjBC,kBAAmB,CACfC,QAAS,QAEbC,UAAW,CACPD,QAAS,OACTnF,MAAO,QACPmD,OAAQ,SAEZkC,WAAY,CACRF,QAAS,OACTnF,MAAO,QACPmD,OAAQ,QAEZmC,UAAW,CACPH,QAAS,OACTnF,MAAO,QACPmD,OAAQ,QAEZoC,MAAO,CAAEvF,MAAO,YA8FLwF,EArES,WACpB,IAAMvE,EAAUtB,IACV8F,EAAmB,CACrB,CACI3C,IAAK,YACLxB,IAAK,sCACLoE,YACI,oIACJC,IAAKvB,MARa,EAtBU,WACpC,IAAMpB,EAAsB,WAAO,IAAD,EACqBC,OACnD,MAAO,CACHjD,MAH0B,EACtBkD,WAGJC,OAJ0B,EACHC,cAFW,EASMtC,mBAC5CkC,KAVsC,mBASnCK,EATmC,KASjBC,EATiB,KAmB1C,OAPAC,qBAAU,WACN,IAAMzB,EAAW,WACbwB,EAAoBN,MAGxB,OADAC,OAAOO,iBAAiB,SAAU1B,GAC3B,kBAAMmB,OAAOQ,oBAAoB,SAAU3B,MACnD,IACIuB,EAcmBK,GAAlB1D,EAXkB,EAWlBA,MAEFwE,GAboB,EAWXrB,OAEQsC,EAAKtE,KAAI,SAACC,GAAD,OAC5B,kBAACwC,EAAA,EAAD,CAAMxC,MAAI,EAACwE,IAAE,GACT,uBAAGvE,KAAMD,EAAKE,IAAKE,UAAWP,EAAQ4D,KAClC,kBAACgB,EAAA,EAAD,CACIrE,UACIxB,EAjFK,IAkFCiB,EAAQmE,UACRpF,EAlFF,IAmFEiB,EAAQoE,WACRpE,EAAQqE,WAGlB,kBAACQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYnF,UAAU,KAAKoF,QAAQ,MAC9B5E,EAAK0B,KAEV,kBAACiD,EAAA,EAAD,CACInF,UAAU,KACVoF,QAAQ,YACRvD,MAAM,gBACNjB,UACIxB,EAjGH,IAkGSiB,EAAQiE,kBACRjE,EAAQgE,iBAGjB7D,EAAKsE,cAGd,kBAACO,EAAA,EAAD,CACIzE,UAAWP,EAAQsE,MACnBW,MAAO9E,EAAKuE,IACZQ,MAAM,qBAO1B,OACI,yBAAKxC,GAAG,QAAQnC,UAAU,mBACtB,wBAAIA,UAAU,SAAd,SACA,kBAACoC,EAAA,EAAD,CACIC,WAAS,EACTI,QAAS,EACTH,UAAU,MACVC,QAAQ,SACRC,WAAW,aACXxC,UAAWP,EAAQ+D,eAElBR,KCvIX7E,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCuG,cAAe,CACXC,WAAY,OACZC,cAAe,OACfC,aAAc,OACdvG,MAAO,OACPyC,MAAO,QACP8B,UAAW,SACXtE,gBAAiB,yBAcVuG,EAVU,WACrB,IAAMvF,EAAUtB,IAChB,OACI,yBAAK6B,UAAWP,EAAQmF,eACpB,4DACA,0DCIGK,EAdO,WAClB,OACI,yBAAKjF,UAAU,aACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCPQkF,QACa,cAA7BzD,OAAO0D,SAASC,UAEiB,UAA7B3D,OAAO0D,SAASC,UAEhB3D,OAAO0D,SAASC,SAASC,MACrB,2DCVZC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDiIzC,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAChCA,EAAaC,kB","file":"static/js/main.c391b2e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/polygon2.95689543.jpg\";","import React, { useState, useEffect } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem, { ListItemProps } from '@material-ui/core/ListItem';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport EventListener from 'react-event-listener';\nimport './Header.scss';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            backgroundColor: theme.palette.background.paper,\n            maxWidth: '500',\n            position: 'fixed',\n        },\n        subHeader: {\n            position: 'relative',\n        },\n    }),\n);\n\nconst ListItemLink = (props: ListItemProps<'a', { button?: true }>) => {\n    return <ListItem button component=\"a\" {...props} />;\n};\ninterface References {\n    name: string;\n    url: string;\n    class: string;\n}\ntype Props = {\n    className?: string;\n    refItems: References[];\n};\n\nconst ResponsiveDrawer: React.FC<Props> = (props: Props) => {\n    const [mobileOpen, setMobileMenuIsOpen] = useState(false);\n    const classes: any = useStyles();\n    const references: References[] = props.refItems;\n    const refItems = references.map((item) => (\n        <ListItemLink href={item.url}>\n            <ListItemIcon>\n                <i className={item.class}></i>\n            </ListItemIcon>\n            <ListItemText primary={item.name} />\n        </ListItemLink>\n    ));\n\n    const handleResize = (): void => {\n        setMobileMenuIsOpen(false);\n    };\n    return (\n        <>\n            <EventListener target=\"window\" onResize={handleResize} />\n            {mobileOpen ? (\n                <>\n                    <div className=\"header-menu\">\n                        <i\n                            className=\"fa fa-times menu-icon\"\n                            onClick={() =>\n                                setMobileMenuIsOpen(mobileOpen ? false : true)\n                            }\n                        ></i>\n                    </div>\n                    <List\n                        component=\"nav\"\n                        aria-label=\"mobile menu bar\"\n                        className={classes.root}\n                        subheader={\n                            <ListSubheader\n                                component=\"nav\"\n                                className={classes.subHeader}\n                            >\n                                Find more!\n                            </ListSubheader>\n                        }\n                    >\n                        {refItems}\n                    </List>\n                </>\n            ) : (\n                <div className=\"header-menu\">\n                    <i\n                        className=\"fa fa-bars menu-icon\"\n                        onClick={() =>\n                            setMobileMenuIsOpen(mobileOpen ? false : true)\n                        }\n                    ></i>\n                </div>\n            )}\n        </>\n    );\n};\n\nconst Header: React.FC = () => {\n    const references: References[] = [\n        {\n            name: 'github',\n            url: 'https://github.com/mie998',\n            class: 'fa fa-github fa-2x',\n        },\n        {\n            name: 'twitter',\n            url: 'https://twitter.com/Mie98838',\n            class: 'fa fa-twitter-square fa-2x',\n        },\n        {\n            name: 'hatena',\n            url: 'https://mie999.hatenablog.com/',\n            class: 'fas fa-blog fa-2x',\n        },\n    ];\n    const refItems: JSX.Element[] = references.map((item) => (\n        <a href={item.url}>\n            <i className={item.class}></i>\n        </a>\n    ));\n\n    return (\n        <div className=\"header-wrapper\">\n            <div className=\"header-left\">\n                <a href=\"#about\">About</a>\n                <a href=\"#experience\">History</a>\n                <a href=\"#skill\">Skill</a>\n                <a href=\"#works\">Works</a>\n            </div>\n            <div className=\"header-right\">{refItems}</div>\n            <ResponsiveDrawer refItems={references} />\n        </div>\n    );\n};\nexport default Header;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport polyImg from './images/polygon2.jpg';\nimport './mixin.scss';\n\nconst smartPhoneMaxSize = 670;\nconst useStyles = makeStyles(() => ({\n    contact: {\n        fontSize: '1.5rem',\n    },\n    hovers: {\n        color: 'white',\n        '&:hover': {\n            color: 'rgba(255, 255, 255, .3)',\n        },\n    },\n    imgs: {\n        width: '70%',\n        border: '1px solid black',\n        borderRadius: '1rem',\n    },\n}));\n\nexport const useWindowDimensions: any = () => {\n    const getWindowDimensions = () => {\n        const { innerWidth: width, innerHeight: height } = window;\n        return {\n            width,\n            height,\n        };\n    };\n\n    const [windowDimensions, setWindowDimensions] = useState(\n        getWindowDimensions(),\n    );\n    useEffect(() => {\n        const onResize = () => {\n            setWindowDimensions(getWindowDimensions());\n        };\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n    return windowDimensions;\n};\n\ninterface Content {\n    key: string;\n    value: string;\n    url: string;\n}\nconst About: React.FC = () => {\n    const classes = useStyles();\n    const data: Content[] = [\n        { key: 'Name', value: 'Keisuke Nishiwaki', url: '' },\n        {\n            key: 'University',\n            value: '京都大学情報学科',\n            url: '',\n        },\n        { key: 'GitHub', value: 'mie998', url: 'https://github.com/mie998' },\n        {\n            key: 'Twitter',\n            value: 'MIE98838',\n            url: 'https://twitter.com/Mie98838',\n        },\n        { key: 'Contact', value: 'nishiwaki.kyoto[at]gmail.com', url: '' },\n    ];\n\n    const table_contents = data.map((item) => (\n        <tr>\n            <th>{item.key}</th>\n            <td>\n                <a href={item.url} className={classes.hovers}>\n                    {item.value}\n                </a>\n            </td>\n        </tr>\n    ));\n\n    const { width, height } = useWindowDimensions();\n    return (\n        <div id=\"about\" className=\"content-wrapper\">\n            <h2 className=\"title\">About</h2>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={3}\n            >\n                {width > smartPhoneMaxSize ? (\n                    <Grid xs={3} item>\n                        <img src={polyImg} className={classes.imgs} />\n                    </Grid>\n                ) : (\n                    <></>\n                )}\n                <Grid xs={width > 670 ? 5 : 8} item>\n                    <p>\n                        京都大学情報学科現4回生。ゲームは古来からの趣味であり、嵌まり込みすぎて情報学科に入学。現在は京都大学の神田研究室にて\n                        Human Robot Interaction に関する研究を行なっている。\n                    </p>\n                    <p>\n                        ゲーム開発やWEB開発,ロボットプログラミングなどさまざまな分野に対して広く興味を持っている。\n                    </p>\n                    <p className={classes.contact}>\n                        連絡先: nishiwaki.kyoto[at]gmail.com\n                    </p>\n                </Grid>\n                {/* <table className=\"table-wrapper\">{table_contents}</table> */}\n            </Grid>\n        </div>\n    );\n};\n\nexport default About;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    aboutTitle: {\n        textAlign: 'center',\n    },\n}));\n\ninterface WorkData {\n    key: string;\n    role: string;\n    period: string;\n}\nconst Experiences: React.FC = () => {\n    const data: WorkData[] = [\n        {\n            key: '株式会社スマイル',\n            role: 'Frontend Enginner',\n            period: 'October/2018 ~ Aplil/2019',\n        },\n        {\n            key: 'Chatwork',\n            role: 'Engineer internship',\n            period: 'Mid August/2019 ~ Early September/2019',\n        },\n        {\n            key: '株式会社SUS',\n            role: 'Unity Enginner',\n            period: 'February/2020 ~ May/2020',\n        },\n    ];\n    const table_contents = data.map((item) => (\n        <tr>\n            <th>{item.key}</th>\n            <td>{item.role}</td>\n            <td>{item.period}</td>\n        </tr>\n    ));\n\n    return (\n        <div id=\"experience\" className=\"content-wrapper\">\n            <h2 className=\"title\">Experiences</h2>\n            <table className=\"table-wrapper\">{table_contents}</table>\n        </div>\n    );\n};\n\nexport default Experiences;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './styles/Skill.scss';\n\ninterface Content {\n    key: string;\n}\nconst Skill: React.FC = () => {\n    const data: Content[] = [\n        { key: 'html/css(scss)' },\n        { key: 'JS/TS/React' },\n        { key: 'C++' },\n        { key: 'Python' },\n        { key: 'Rust' },\n        { key: 'Unity(C#)' },\n        { key: 'bash/zsh' },\n        { key: 'vim' },\n        { key: 'TOEIC 870' },\n    ];\n\n    const table_contents = data.map((item) => (\n        <tr>\n            <li>{item.key}</li>\n        </tr>\n    ));\n\n    return (\n        <div id=\"skill\" className=\"content-wrapper\">\n            <h2 className=\"title\">Skill</h2>\n            <table className=\"table-wrapper\">{table_contents}</table>\n        </div>\n    );\n};\n\nexport default Skill;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    aboutTitle: {\n        textAlign: 'center',\n    },\n}));\n\nconst Top: React.FC = () => {\n    return <></>;\n};\n\nexport default Top;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState, useEffect } from 'react';\nimport Grid, { GridProps } from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport polyImg from './images/polygon2.jpg';\n\nconst tabletSizeMax = 1000;\nconst smartPhoneSizeMax = 670;\nconst smartPhoneSizeMedium = 420;\nconst smartPhoneSizeSmall = 320;\ninterface Contents {\n    key: string;\n    url: string;\n    description: string;\n    img: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    ref: {\n        textDecoration: 'none',\n        '&:hover': {\n            opacity: '0.5',\n        },\n    },\n    cardContainer: {\n        textAlign: 'center',\n    },\n    cardDescription: {},\n    noCardDescription: {\n        display: 'None',\n    },\n    largeCard: {\n        display: 'flex',\n        width: '25rem',\n        height: '10rem',\n    },\n    mediumCard: {\n        display: 'flex',\n        width: '20rem',\n        height: '8rem',\n    },\n    smallCard: {\n        display: 'flex',\n        width: '15rem',\n        height: '5rem',\n    },\n    cover: { width: '100%' },\n}));\n\nexport const useWindowDimensions: any = () => {\n    const getWindowDimensions = () => {\n        const { innerWidth: width, innerHeight: height } = window;\n        return {\n            width,\n            height,\n        };\n    };\n\n    const [windowDimensions, setWindowDimensions] = useState(\n        getWindowDimensions(),\n    );\n    useEffect(() => {\n        const onResize = () => {\n            setWindowDimensions(getWindowDimensions());\n        };\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n    return windowDimensions;\n};\n\nconst Works: React.FC = () => {\n    const classes = useStyles();\n    const data: Contents[] = [\n        {\n            key: 'portfolio',\n            url: 'https://mie998.github.io/portfolio/',\n            description:\n                '自身のポートフォリオサイト. React, TypeScript などを使用.',\n            img: polyImg,\n        },\n    ];\n    const { width, height } = useWindowDimensions();\n\n    const table_contents = data.map((item) => (\n        <Grid item xl>\n            <a href={item.url} className={classes.ref}>\n                <Card\n                    className={\n                        width > smartPhoneSizeMedium\n                            ? classes.largeCard\n                            : width > smartPhoneSizeSmall\n                            ? classes.mediumCard\n                            : classes.smallCard\n                    }\n                >\n                    <CardContent>\n                        <Typography component=\"h5\" variant=\"h5\">\n                            {item.key}\n                        </Typography>\n                        <Typography\n                            component=\"h6\"\n                            variant=\"subtitle1\"\n                            color=\"textSecondary\"\n                            className={\n                                width < smartPhoneSizeMedium\n                                    ? classes.noCardDescription\n                                    : classes.cardDescription\n                            }\n                        >\n                            {item.description}\n                        </Typography>\n                    </CardContent>\n                    <CardMedia\n                        className={classes.cover}\n                        image={item.img}\n                        title=\"portfolio\"\n                    ></CardMedia>\n                </Card>\n            </a>\n        </Grid>\n    ));\n\n    return (\n        <div id=\"works\" className=\"content-wrapper\">\n            <h2 className=\"title\">Works</h2>\n            <Grid\n                container\n                spacing={3}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"flex-start\"\n                className={classes.cardContainer}\n            >\n                {table_contents}\n            </Grid>\n        </div>\n    );\n};\n\nexport default Works;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    footerWrapper: {\n        paddingTop: '1rem',\n        paddingBottom: '1rem',\n        paddingRight: '1rem',\n        width: '100%',\n        color: 'white',\n        textAlign: 'center',\n        backgroundColor: 'rgba(0, 0, 0, .5)',\n    },\n}));\n\nconst Footer: React.FC = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.footerWrapper}>\n            <p>Produced by Keisuke Nishiwaki</p>\n            <p>last modified: 24/08/2020</p>\n        </div>\n    );\n};\n\nexport default Footer;\n","import React from 'react';\nimport './components/mixin.scss';\nimport Header from './components/Header';\nimport About from './components/About';\nimport History from './components/Experiences';\nimport Skill from './components/Skill';\nimport Top from './components/Top';\nimport Works from './components/Works';\nimport Footer from './components/Footer';\n\nconst App: React.FC = () => {\n    return (\n        <div className=\"container\">\n            <Header />\n            <Top />\n            <About />\n            <History />\n            <Skill />\n            <Works />\n            <Footer />\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n        ),\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.',\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}