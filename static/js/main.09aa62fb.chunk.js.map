{"version":3,"sources":["components/Header.js","components/About.js","components/History.js","components/Skill.js","components/Top.js","components/Works.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","class","href","className","React","Component","About","value","url","table_content","data","key","i","push","id","History","role","period","Skill","Top","Works","description","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.09aa62fb.chunk.js","sourcesContent":["import React from 'react'\nimport './styles/Header.scss'\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <div class='header-wrapper'>\n                <div class='header-left'>\n                    <a href='#about'>About</a>\n                    <a href='#history'>History</a>\n                    <a href='#skill'>Skill</a>\n                    <a href='#works'>Works</a>\n                </div>\n                <div className='header-right'>\n                    <i class='fa fa-bars menu-icon'></i>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react'\nimport './styles/About.scss'\n\nclass About extends React.Component {\n    render() {\n        let table_content = [];\n        let data = [\n            {key: 'Name', value: 'Keisuke Nishiwaki', url: ''},\n            {key: 'University', value: 'Informatics and Mathematical science faculty in Kyoto University', url: ''},\n            {key: 'GitHub', value: 'mie998', url: 'https://github.com/mie998'},\n            {key: 'Twitter', value: '@MIE98838', url: 'https://twitter.com/Mie98838'},\n            {key: 'Blog', value: 'みえログ！', url: 'https://blog.hatena.ne.jp/MIE999/mie999.hatenablog.com/'},\n            {key: 'Contact', value: 'nishiwaki.kyoto[at]gmail.com', url: ''},\n        ];\n\n        const setUrl = function (value, url) {\n            if (url !== '') {\n                return (\n                    <td><a href={url}>{value}</a></td>\n                );\n            } else {\n                return (\n                    <td>{value}</td>\n                );\n            }\n        };\n        for (let i in data) {\n            table_content.push(\n                <tr>\n                    <th>{data[i].key}</th>\n                    {setUrl(data[i].value, data[i].url)}\n                </tr>\n            );\n        }\n\n        return (\n            <div id=\"about\" className=\"about-wrapper\">\n                <h2 className=\"about-title\">About</h2>\n                <div className=\"box-wrapper\">\n                    <table className=\"about-content\">\n                        {table_content}\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default About;\n","import React from 'react'\nimport './styles/History.scss'\n\nclass History extends React.Component {\n    render() {\n        let table_content = [];\n        let data = [\n            {key: '株式会社スマイル', role: 'Frontend Enginner', period: 'October/2018 ~ Aplil/2019'},\n            {key: 'Chatwork', role: 'Engineer internship', period: 'Mid August/2019 ~ Early September/2019'},\n            {key: '株式会社SUS', role: '', period: 'February/2020~'}\n        ];\n\n        for (var i in data) {\n            table_content.push(\n                <tr>\n                    <th>{data[i].key}</th>\n                    <td>{data[i].role}</td>\n                    <td>{data[i].period}</td>\n                </tr>\n            );\n        }\n\n        return (\n            <div id=\"history\" class=\"history-wrapper\">\n                <h2 class=\"history-title\">History</h2>\n                <div className=\"box-wrapper\">\n                    <table className=\"history-content\">\n                        {table_content}\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default History;\n","import React from 'react'\nimport './styles/Skill.scss'\n\nclass Skill extends React.Component {\n    render() {\n        let table_content = [];\n        let data = [\n            {key: 'html/css(scss)'},\n            {key: 'JavaScript/React'},\n            {key: 'C/C++'},\n            {key: 'Python'},\n            {key: 'Rust'},\n            {key: 'Unity'},\n            {key: 'bash/zsh'},\n            {key: 'vim'},\n            {key: 'TOEIC: 870'},\n        ];\n\n        for (var i in data) {\n            table_content.push(\n                <tr>\n                    <li>{data[i].key}</li>\n                </tr>\n            );\n        }\n\n        return (\n            <div id=\"skill\" class=\"skill-wrapper\">\n                <h2 class=\"skill-title\">Skill/Qualification</h2>\n                <div className=\"box-wrapper\">\n                    <table className=\"skill-content\">\n                        {table_content}\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Skill;\n","import React from 'react'\n\nclass Top extends React.Component {\n    render() {\n        return (\n            <div>\n            </div>\n        );\n    }\n}\n\nexport default Top;\n","import React from 'react'\nimport './styles/Works.scss'\n\nclass Works extends React.Component {\n    render() {\n        let table_content = [];\n        let data = [\n            {\n                key: 'portfolio',\n                url: 'https://mie998.github.io/portfolio/',\n                description: '2020年春に自身のポートフォリオサイトを作成しました. React でフロントエンドを処理し, Github Pages にてホスティングしています。'\n            },\n            {key: '', url: '', description: ''},\n        ];\n\n        for (var i in data) {\n            table_content.push(\n                <>\n                    <h3><a href={data[i].url}>{data[i].key}</a></h3>\n                    <p>{data[i].description}</p>\n                </>\n            );\n        }\n\n        return (\n            <div id=\"works\" class=\"work-wrapper\">\n                <h2 class=\"work-title\">Works</h2>\n                <div className=\"box-wrapper\">\n                    <table className=\"work-content\">\n                        {table_content}\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Works;\n","import React from 'react'\nimport './styles/Footer.scss'\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <div class='footer-wrapper'>\n                <p>Produced by Keisuke Nishiwaki</p>\n                <p>last modified: 00/00</p>\n            </div>\n        );\n    }\n}\n\nexport default Footer;\n","import React from 'react';\nimport './components/styles/App.scss';\nimport Header from './components/Header';\nimport About from './components/About';\nimport History from './components/History';\nimport Skill from './components/Skill';\nimport Top from './components/Top';\nimport Works from './components/Works';\nimport Footer from './components/Footer';\n\nfunction App() {\n    return (\n        <div class=\"container\">\n            <Header />\n            <Top />\n            <About />\n            <History />\n            <Skill />\n            <Works />\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}