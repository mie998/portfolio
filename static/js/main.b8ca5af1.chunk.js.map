{"version":3,"sources":["components/images/polygon2.jpg","components/Header.tsx","components/About.tsx","components/Experiences.tsx","components/Skill.tsx","components/Top.tsx","components/Works.tsx","components/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","makeStyles","theme","aboutTitle","textAlign","className","href","useStyles","contact","fontSize","hovers","color","imgs","width","border","borderRadius","About","value","url","classes","table_content","data","key","i","push","getWindowDimensions","window","innerWidth","height","innerHeight","useState","windowDimensions","setWindowDimensions","useEffect","onResize","addEventListener","removeEventListener","useWindowDimensions","console","log","id","Grid","container","direction","justify","alignItems","spacing","xs","item","src","polyImg","Experiences","role","period","Skill","Top","ref","textDecoration","opacity","card","display","flexdirection","cover","Works","description","img","Card","CardContent","Typography","component","variant","CardMedia","image","title","footerWrapper","padding","backgroundColor","Footer","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,sC,oQCoC5BC,G,MAhCGC,aAAW,SAACC,GAAD,MAAY,CACrCC,WAAY,CACRC,UAAW,cAIM,WACrB,OACI,yBAAKC,UAAU,kBACX,yBAAKA,UAAU,eACX,uBAAGC,KAAK,UAAR,SACA,uBAAGA,KAAK,eAAR,WACA,uBAAGA,KAAK,UAAR,SACA,uBAAGA,KAAK,UAAR,UAEJ,yBAAKD,UAAU,gBACX,uBAAGC,KAAK,6BACJ,uBAAGD,UAAU,wBAEjB,uBAAGC,KAAK,gCACJ,uBAAGD,UAAU,gCAEjB,uBAAGC,KAAK,2DACJ,uBAAGD,UAAU,wBAGrB,yBAAKA,UAAU,eACX,uBAAGA,UAAU,6B,iCCxBvBE,G,MAAYN,aAAW,SAACC,GAAD,MAAY,CACrCM,QAAS,CACLC,SAAU,UAEdC,OAAQ,CACJC,MAAO,QACP,UAAW,CACPA,MAAO,4BAGfC,KAAM,CACFC,MAAO,MACPC,OAAQ,kBACRC,aAAc,aA4GPC,EA7ES,WACpB,IAkBgBC,EAAeC,EAlBzBC,EAAUZ,IACZa,EAAuB,GACvBC,EAAkB,CAClB,CAAEC,IAAK,OAAQL,MAAO,oBAAqBC,IAAK,IAChD,CACII,IAAK,aACLL,MAAO,mDACPC,IAAK,IAET,CAAEI,IAAK,SAAUL,MAAO,SAAUC,IAAK,6BACvC,CACII,IAAK,UACLL,MAAO,WACPC,IAAK,gCAET,CAAEI,IAAK,UAAWL,MAAO,+BAAgCC,IAAK,KAgBlE,IAAK,IAAIK,KAAKF,EACVD,EAAcI,KACV,4BACI,4BAAKH,EAAKE,GAAGD,MAhBTL,EAiBII,EAAKE,GAAGN,MAhBZ,MADeC,EAiBIG,EAAKE,GAAGL,KAd/B,4BACI,uBAAGZ,KAAMY,EAAKb,UAAWc,EAAQT,QAC5BO,IAKN,4BAAKA,MA7BM,MA3BK,WAC/B,IAAMQ,EAAsB,WAAO,IAAD,EACqBC,OACnD,MAAO,CACHb,MAH0B,EACtBc,WAGJC,OAJ0B,EACHC,cAFM,EASWC,mBAC5CL,KAViC,mBAS9BM,EAT8B,KASZC,EATY,KAmBrC,OAPAC,qBAAU,WACN,IAAMC,EAAW,WACbF,EAAoBP,MAGxB,OADAC,OAAOS,iBAAiB,SAAUD,GAC3B,kBAAMR,OAAOU,oBAAoB,SAAUF,MACnD,IACIH,EAgDmBM,GAAlBxB,EAxCkB,EAwClBA,MAxCkB,EAwCXe,OAEf,OADAU,QAAQC,IAAI1B,GAER,yBAAK2B,GAAG,QAAQnC,UAAU,mBACtB,wBAAIA,UAAU,SAAd,SACA,kBAACoC,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXC,QAAS,GAERjC,EAAQ,IACL,kBAAC4B,EAAA,EAAD,CAAMM,GAAI,EAAGC,MAAI,GACb,yBAAKC,IAAKC,IAAS7C,UAAWc,EAAQP,QAG1C,qCAEJ,kBAAC6B,EAAA,EAAD,CAAMM,GAAIlC,EAAQ,IAAM,EAAI,EAAGmC,MAAI,GAC/B,yeAIA,qSAGA,uBAAG3C,UAAWc,EAAQX,SAAtB,wDClEL2C,GAhDGlD,aAAW,SAACC,GAAD,MAAY,CACrCC,WAAY,CACRC,UAAW,cASW,WAC1B,IAAIgB,EAAuB,GACvBC,EAAmB,CACnB,CACIC,IAAK,mDACL8B,KAAM,oBACNC,OAAQ,6BAEZ,CACI/B,IAAK,WACL8B,KAAM,sBACNC,OAAQ,0CAEZ,CACI/B,IAAK,8BACL8B,KAAM,iBACNC,OAAQ,mBAGhB,IAAK,IAAI9B,KAAKF,EACVD,EAAcI,KACV,4BACI,4BAAKH,EAAKE,GAAGD,KACb,4BAAKD,EAAKE,GAAG6B,MACb,4BAAK/B,EAAKE,GAAG8B,UAKzB,OACI,yBAAKb,GAAG,aAAanC,UAAU,mBAC3B,wBAAIA,UAAU,SAAd,eACA,2BAAOA,UAAU,iBAAiBe,MCR/BkC,G,MAnCGrD,aAAW,SAACC,GAAD,MAAY,CACrCC,WAAY,CACRC,UAAW,cAGK,WACpB,IAAIgB,EAAgB,GAChBC,EAAO,CACP,CAAEC,IAAK,kBACP,CAAEA,IAAK,eACP,CAAEA,IAAK,OACP,CAAEA,IAAK,UACP,CAAEA,IAAK,QACP,CAAEA,IAAK,aACP,CAAEA,IAAK,YACP,CAAEA,IAAK,OACP,CAAEA,IAAK,cAGX,IAAK,IAAIC,KAAKF,EACVD,EAAcI,KACV,4BACI,4BAAKH,EAAKE,GAAGD,OAKzB,OACI,yBAAKkB,GAAG,QAAQnC,UAAU,mBACtB,wBAAIA,UAAU,SAAd,uBACA,2BAAOA,UAAU,iBAAiBe,MCrB/BmC,GAVGtD,aAAW,SAACC,GAAD,MAAY,CACrCC,WAAY,CACRC,UAAW,cAIG,WAClB,OAAO,uC,gCCOLG,EAAYN,aAAW,SAACC,GAAD,MAAY,CACrCsD,IAAK,CACDC,eAAgB,OAChB,UAAW,CACPC,QAAS,QAGjBC,KAAM,CAAEC,QAAS,OAAQC,cAAe,UACxCC,MAAO,CAAEjD,MAAO,WA2DLkD,EAxDS,WACpB,IAAM5C,EAAUZ,IACZa,EAAgB,GAChBC,EAAmB,CACnB,CACIC,IAAK,YACLJ,IAAK,sCACL8C,YACI,oIACJC,IAAK,0BAIb,IAAK,IAAI1C,KAAKF,EACVD,EAAcI,KACV,kBAACiB,EAAA,EAAD,CAAMO,MAAI,EAACD,GAAI,GACX,uBAAGzC,KAAMe,EAAKE,GAAGL,IAAKb,UAAWc,EAAQqC,KACrC,kBAACU,EAAA,EAAD,CAAM7D,UAAWc,EAAQwC,MACrB,kBAACQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,MAC9BjD,EAAKE,GAAGD,KAEb,kBAAC8C,EAAA,EAAD,CACIE,QAAQ,YACR3D,MAAM,iBAELU,EAAKE,GAAGyC,cAGjB,kBAACO,EAAA,EAAD,CACIlE,UAAWc,EAAQ2C,MACnBU,MAAOtB,IACPuB,MAAM,kBAQ9B,OACI,yBAAKjC,GAAG,QAAQnC,UAAU,mBACtB,wBAAIA,UAAU,SAAd,SACA,kBAACoC,EAAA,EAAD,CACIC,WAAS,EACTI,QAAS,EACTH,UAAU,MACVC,QAAQ,SACRC,WAAW,UAEVzB,KC1EXb,G,MAAYN,aAAW,SAACC,GAAD,MAAY,CACrCwE,cAAe,CACXC,QAAS,SACThE,MAAO,QACPP,UAAW,SACXwE,gBAAiB,0BAcVC,EAVU,WACrB,IAAM1D,EAAUZ,IAChB,OACI,yBAAKF,UAAWc,EAAQuD,eACpB,4DACA,qDCMGI,EAdO,WAClB,OACI,yBAAKzE,UAAU,aACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCPQ0E,QACa,cAA7BrD,OAAOsD,SAASC,UAEiB,UAA7BvD,OAAOsD,SAASC,UAEhBvD,OAAOsD,SAASC,SAASC,MACrB,2DCVZC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDiIzC,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAChCA,EAAaC,kB","file":"static/js/main.b8ca5af1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/polygon2.95689543.jpg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './Header.scss';\n\nconst useStyles = makeStyles((theme) => ({\n    aboutTitle: {\n        textAlign: 'center',\n    },\n}));\n\nconst Header: React.FC = () => {\n    return (\n        <div className=\"header-wrapper\">\n            <div className=\"header-left\">\n                <a href=\"#about\">About</a>\n                <a href=\"#experience\">History</a>\n                <a href=\"#skill\">Skill</a>\n                <a href=\"#works\">Works</a>\n            </div>\n            <div className=\"header-right\">\n                <a href=\"https://github.com/mie998\">\n                    <i className=\"fa fa-github fa-2x\"></i>\n                </a>\n                <a href=\"https://twitter.com/Mie98838\">\n                    <i className=\"fa fa-twitter-square fa-2x\"></i>\n                </a>\n                <a href=\"https://blog.hatena.ne.jp/MIE999/mie999.hatenablog.com/\">\n                    <i className=\"fas fa-blog fa-2x\"></i>\n                </a>\n            </div>\n            <div className=\"header-menu\">\n                <i className=\"fa fa-bars menu-icon\"></i>\n            </div>\n        </div>\n    );\n};\nexport default Header;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport polyImg from './images/polygon2.jpg';\nimport './mixin.scss';\n\nconst useStyles = makeStyles((theme) => ({\n    contact: {\n        fontSize: '1.5rem',\n    },\n    hovers: {\n        color: 'white',\n        '&:hover': {\n            color: 'rgba(255, 255, 255, .3)',\n        },\n    },\n    imgs: {\n        width: '70%',\n        border: '1px solid black',\n        borderRadius: '1rem',\n    },\n}));\n\nexport const useWindowDimensions = () => {\n    const getWindowDimensions = () => {\n        const { innerWidth: width, innerHeight: height } = window;\n        return {\n            width,\n            height,\n        };\n    };\n\n    const [windowDimensions, setWindowDimensions] = useState(\n        getWindowDimensions(),\n    );\n    useEffect(() => {\n        const onResize = () => {\n            setWindowDimensions(getWindowDimensions());\n        };\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n    return windowDimensions;\n};\n\ninterface Content {\n    key: string;\n    value: string;\n    url: string;\n}\nconst About: React.FC = () => {\n    const classes = useStyles();\n    let table_content: any[] = [];\n    let data: Content[] = [\n        { key: 'Name', value: 'Keisuke Nishiwaki', url: '' },\n        {\n            key: 'University',\n            value: '京都大学情報学科',\n            url: '',\n        },\n        { key: 'GitHub', value: 'mie998', url: 'https://github.com/mie998' },\n        {\n            key: 'Twitter',\n            value: 'MIE98838',\n            url: 'https://twitter.com/Mie98838',\n        },\n        { key: 'Contact', value: 'nishiwaki.kyoto[at]gmail.com', url: '' },\n    ];\n\n    const setUrl = (value: string, url: string) => {\n        if (url !== '') {\n            return (\n                <td>\n                    <a href={url} className={classes.hovers}>\n                        {value}\n                    </a>\n                </td>\n            );\n        } else {\n            return <td>{value}</td>;\n        }\n    };\n    for (let i in data) {\n        table_content.push(\n            <tr>\n                <th>{data[i].key}</th>\n                {setUrl(data[i].value, data[i].url)}\n            </tr>,\n        );\n    }\n    const { width, height } = useWindowDimensions();\n    console.log(width);\n    return (\n        <div id=\"about\" className=\"content-wrapper\">\n            <h2 className=\"title\">About</h2>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={3}\n            >\n                {width > 670 ? (\n                    <Grid xs={3} item>\n                        <img src={polyImg} className={classes.imgs} />\n                    </Grid>\n                ) : (\n                    <></>\n                )}\n                <Grid xs={width > 670 ? 5 : 8} item>\n                    <p>\n                        京都大学情報学科現4回生。ゲームは古来からの趣味であり、嵌まり込みすぎて情報学科に入学。現在は京都大学の神田研究室にて\n                        Human Robot Interaction に関する研究を行なっている。\n                    </p>\n                    <p>\n                        ゲーム開発やWEB開発,ロボットプログラミングなどさまざまな分野に対して広く興味を持っている。\n                    </p>\n                    <p className={classes.contact}>\n                        連絡先: nishiwaki.kyoto[at]gmail.com\n                    </p>\n                </Grid>\n                {/* <table className=\"table-wrapper\">{table_content}</table> */}\n            </Grid>\n        </div>\n    );\n};\n\nexport default About;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    aboutTitle: {\n        textAlign: 'center',\n    },\n}));\n\ninterface WorkData {\n    key: string;\n    role: string;\n    period: string;\n}\nconst Experiences: React.FC = () => {\n    let table_content: any[] = [];\n    let data: WorkData[] = [\n        {\n            key: '株式会社スマイル',\n            role: 'Frontend Enginner',\n            period: 'October/2018 ~ Aplil/2019',\n        },\n        {\n            key: 'Chatwork',\n            role: 'Engineer internship',\n            period: 'Mid August/2019 ~ Early September/2019',\n        },\n        {\n            key: '株式会社SUS',\n            role: 'Unity Enginner',\n            period: 'February/2020~',\n        },\n    ];\n    for (var i in data) {\n        table_content.push(\n            <tr>\n                <th>{data[i].key}</th>\n                <td>{data[i].role}</td>\n                <td>{data[i].period}</td>\n            </tr>,\n        );\n    }\n\n    return (\n        <div id=\"experience\" className=\"content-wrapper\">\n            <h2 className=\"title\">Experiences</h2>\n            <table className=\"table-wrapper\">{table_content}</table>\n        </div>\n    );\n};\n\nexport default Experiences;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './styles/Skill.scss';\n\nconst useStyles = makeStyles((theme) => ({\n    aboutTitle: {\n        textAlign: 'center',\n    },\n}));\nconst Skill: React.FC = () => {\n    let table_content = [];\n    let data = [\n        { key: 'html/css(scss)' },\n        { key: 'JS/TS/React' },\n        { key: 'C++' },\n        { key: 'Python' },\n        { key: 'Rust' },\n        { key: 'Unity(C#)' },\n        { key: 'bash/zsh' },\n        { key: 'vim' },\n        { key: 'TOEIC 870' },\n    ];\n\n    for (var i in data) {\n        table_content.push(\n            <tr>\n                <li>{data[i].key}</li>\n            </tr>,\n        );\n    }\n\n    return (\n        <div id=\"skill\" className=\"content-wrapper\">\n            <h2 className=\"title\">Skill/Qualification</h2>\n            <table className=\"table-wrapper\">{table_content}</table>\n        </div>\n    );\n};\n\nexport default Skill;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    aboutTitle: {\n        textAlign: 'center',\n    },\n}));\n\nconst Top: React.FC = () => {\n    return <></>;\n};\n\nexport default Top;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport polyImg from './images/polygon2.jpg';\n\ninterface Contents {\n    key: string;\n    url: string;\n    description: string;\n    img: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    ref: {\n        textDecoration: 'none',\n        '&:hover': {\n            opacity: '0.5',\n        },\n    },\n    card: { display: 'flex', flexdirection: 'column' },\n    cover: { width: '80%' },\n}));\n\nconst Works: React.FC = () => {\n    const classes = useStyles();\n    let table_content = [];\n    let data: Contents[] = [\n        {\n            key: 'portfolio',\n            url: 'https://mie998.github.io/portfolio/',\n            description:\n                '自身のポートフォリオサイト. React, TypeScript などを使用.',\n            img: './images/polygon2.jpg',\n        },\n    ];\n\n    for (var i in data) {\n        table_content.push(\n            <Grid item xs={4}>\n                <a href={data[i].url} className={classes.ref}>\n                    <Card className={classes.card}>\n                        <CardContent>\n                            <Typography component=\"h5\" variant=\"h5\">\n                                {data[i].key}\n                            </Typography>\n                            <Typography\n                                variant=\"subtitle1\"\n                                color=\"textSecondary\"\n                            >\n                                {data[i].description}\n                            </Typography>\n                        </CardContent>\n                        <CardMedia\n                            className={classes.cover}\n                            image={polyImg}\n                            title=\"portfolio\"\n                        ></CardMedia>\n                    </Card>\n                </a>\n            </Grid>,\n        );\n    }\n\n    return (\n        <div id=\"works\" className=\"content-wrapper\">\n            <h2 className=\"title\">Works</h2>\n            <Grid\n                container\n                spacing={3}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n            >\n                {table_content}\n            </Grid>\n        </div>\n    );\n};\n\nexport default Works;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './styles/Footer.scss';\n\nconst useStyles = makeStyles((theme) => ({\n    footerWrapper: {\n        padding: '1rem 0',\n        color: 'white',\n        textAlign: 'center',\n        backgroundColor: 'rgba(0, 0, 0, .5)',\n    },\n}));\n\nconst Footer: React.FC = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.footerWrapper}>\n            <p>Produced by Keisuke Nishiwaki</p>\n            <p>last modified: 00/00</p>\n        </div>\n    );\n};\n\nexport default Footer;\n","import React from 'react';\nimport './components/styles/App.scss';\nimport Header from './components/Header';\nimport About from './components/About';\nimport History from './components/Experiences';\nimport Skill from './components/Skill';\nimport Top from './components/Top';\nimport Works from './components/Works';\nimport Footer from './components/Footer';\n\nconst App: React.FC = () => {\n    return (\n        <div className=\"container\">\n            <Header />\n            <Top />\n            <About />\n            <History />\n            <Skill />\n            <Works />\n            <Footer />\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n        ),\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.',\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}